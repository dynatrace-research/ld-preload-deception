apiVersion: v1
kind: Service
metadata:
  name: deception-python-webhook
  labels:
    app.kubernetes.io/name: python-webhook
    app.kubernetes.io/part-of: deception
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: python-webhook
    app.kubernetes.io/part-of: deception
  ports:
    - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deception-python-webhook
  labels:
    app.kubernetes.io/name: python-webhook
    app.kubernetes.io/part-of: deception
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: python-webhook
      app.kubernetes.io/part-of: deception
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: python-webhook
        app.kubernetes.io/part-of: deception
    spec:
      containers:
        - name: python-webhook
          image: benchmark-deception-webhook
          ports:
            - containerPort: 443
          env:
            - name: PERSISTENT_VOLUME_CLAIM
              value: "benchmark-deception-deceiving-resources-volume-claim"
          volumeMounts:
            - name: tls-secrets
              mountPath: "/certs"
              readOnly: true
      volumes:
        - name: tls-secrets
          projected:
            sources:
              - secret:
                  name: deception-python-webhook-tls
                  items:
                    - key: tls.crt
                      path: webhook.crt
                    - key: tls.key
                      path: webhook.key
